import {
  HIS_REPORT_STATUS_TYPE,
  ORDER_DIAGNOSIS_STEP_STATUS,
  USER_TYPE,
} from '../../types/dto';
import { Translation } from '../i18n-types';

import { QMS_RESOURCES, RESOURCES } from './../../types/resources';

const resources: Translation['resources'] = {
  [RESOURCES.PATIENT]: {
    title: 'Patient',
    adminTitle: 'Patient',
    id: 'PatientID',
    birthDate: 'Birth date',
    email: 'Email',
    phone: 'Phone number',
    address: 'Address',
    fullName: 'Patient name',
    gender: 'Gender',
    age: 'Age',
    createType: 'Create type',
    birthYear: 'Birth year',
  },
  [RESOURCES.ORDER]: {
    inpatient: 'Inpatient',
    title: {
      assignInfo: 'Assign Info',
      assign: 'Assign',
    },
    adminTitle: 'Assign',
    name: 'Order',
    id: 'OrderID',
    accessionNumber: {
      long: 'Accession number',
      short: 'Acc. number',
    },
    attributes: 'Attributes',
    creationType: 'Creation type',
    numOfConsumables: {
      long: 'Number of consumables',
      short: 'Consumables',
    },
    description: 'Description',
    diagnosis: {
      short: 'Diagnosis',
      littleShort: 'Diagnosis',
      long: 'Diagnosis',
    },
    encounterNumber: 'Encounter number',
    instructions: 'Instructions',
    insuranceApplied: 'Insurance applied',
    insuranceExpiredDate: 'Insurance expired date',
    insuranceIssuedDate: 'Insurance issued date',
    insuranceNumber: {
      long: 'Insurance number',
      short: 'Insurance number',
    },
    insurance: 'Insurance',
    lockedBy: { long: 'Lock user', short: 'Lock user' },
    modality: 'Modality',
    actionModality: 'Modality',
    lockUser: 'Lock user',
    modalityType: {
      long: 'Modality type',
      short: 'Type',
    },
    deviceType: {
      long: 'Device type',
      short: 'Type',
    },
    referringPhysician: {
      short: 'Ref. physician',
      long: 'Referring physician',
    },
    icdCode: 'ICD code',
    reportStatus: 'Report status',
    reportStatusMessage: `{status|{${ORDER_DIAGNOSIS_STEP_STATUS.APPROVED}: Approved,${ORDER_DIAGNOSIS_STEP_STATUS.NOT_READY}: Not Ready,${ORDER_DIAGNOSIS_STEP_STATUS.NOT_STARTED}: Not Started, ${ORDER_DIAGNOSIS_STEP_STATUS.PENDING_APPROVAL}: Pending Approval}}`,
    hisReportStatusMessage: `{status|{${HIS_REPORT_STATUS_TYPE.FAILED}: Thất bại,${HIS_REPORT_STATUS_TYPE.NOT_READY}: Chưa gửi,${HIS_REPORT_STATUS_TYPE.SENDING}: Đang gửi, ${HIS_REPORT_STATUS_TYPE.SUCCEEDED}: Thành công, ${HIS_REPORT_STATUS_TYPE.HIS_ORDER_CANCELED}: HIS báo lỗi chỉ định này đã được hủy, ${HIS_REPORT_STATUS_TYPE.HIS_ORDER_PAID}: HIS báo lỗi chỉ định này đã thanh toán,${HIS_REPORT_STATUS_TYPE.HIS_ORDER_NOT_ALLOWED}: HIS báo lỗi chỉ định này chưa được phép thực hiện,${HIS_REPORT_STATUS_TYPE.HIS_NOT_SYNC_MODALITIES}: HIS báo lỗi chưa có dữ liệu thiết bị,${HIS_REPORT_STATUS_TYPE.HIS_CONNECT_TIME_OUT}: Lỗi kết nối tới HIS,${HIS_REPORT_STATUS_TYPE.HIS_UNKNOWN_ERROR}: Lỗi không xác định từ HIS,${HIS_REPORT_STATUS_TYPE.CONN_ERROR}: Lỗi convert từ connector}}`,
    signStatusMessage: {
      unSigned: 'Unsigned',
      signed: 'Signed',
    },
    requestedDepartment: {
      short: 'Requested dept.',
      long: 'Requested department',
    },
    requestedDate: {
      short: 'Requested date',
      long: 'Requested date',
    },
    requestedTime: {
      short: 'Requested time',
      long: 'Requested time',
    },
    approver: {
      short: 'Approver',
      long: 'Approver',
    },
    reporter: {
      short: 'Reporter',
      long: 'Reporter',
    },
    approvedDate: {
      long: 'Approved date',
      short: 'Approved date',
    },
    operator: {
      short: 'Operator',
      long: 'Operator',
    },
    performer: 'Operation doctor',
    concluder: 'Concluder',
    approvedTime: 'Approved time',
    requests: 'Requests',
    study: 'Study',
    urgent: {
      long: 'Urgent',
      short: 'Urgent',
    },
    priority: 'Priority',
    patient: {
      title: 'Patient',
      fullname: {
        short: 'PT Name',
        long: 'Patient name',
      },
      pid: {
        short: 'PID',
        long: 'Patient ID',
      },
      gender: 'Gender',
      select: 'Select patient',
      inpatient: 'Inpatient',
      patientHistory: 'patient history',
    },
    mergeOrder: {
      title: 'Merge Study',
      infoStudyNeedMerge: 'Information study',
      infoOrder: 'Information Order',
      searchOrder: 'Search order',
      infoStudyDicomOrder: 'Information dicom study order',
    },
    bodyParts: {
      short: 'Parts',
      long: 'Body Parts',
    },
    createOrder: 'Create order',
    status: 'Status',
    expectedReportTime: {
      short: 'Expected report time',
      long: 'Expected report time',
    },
    expectedReporter: {
      short: 'Expected reporter',
      long: 'Expected reporter',
    },
    request: {
      requestedTime: 'Requested time',
      approvedTime: 'Approved time',
      operationTime: 'Operation time',
    },
    patientHistory: {
      title: 'Patient history infomation',
    },
    infomationOrderDefault: 'Infomation order default',
  },
  [RESOURCES.USER]: {
    name: 'User',
    account: 'Account',
    username: 'Username',
    fullname: 'Fullname',
    password: 'Password',
    currentPassword: 'Current password',
    newPassword: 'New password',
    rePassword: 'Type again password',
    code: 'Code',
    department: 'Department',
    title: 'Title',
    phone: 'Phone',
    email: 'Email',
    type: `{type|{${USER_TYPE.TECHNICIAN}: Technician, ${USER_TYPE.NURSING}: Nurse}}`,
    level: 'Level',
    enabled: 'Enabled',
    disabled: 'Disabled',
    userType: 'User type',
    groupIDs: 'User Group',
    modality: 'Modality',
    role: 'Role',
    certificate: 'Certificate',
    imgSignature: 'Signature image',
    uploadImg: 'Upload image',
    avatar: 'Avatar',
    deleteImg: 'Delete image',
  },
  [RESOURCES.DEPARTMENT]: {
    title: 'Departments',
    name: 'Department name',
    code: 'Department code',
    description: 'Description',
    enabled: 'Enabled',
    disabled: 'Disabled',
    parent: 'Parent department',
    list: 'Department list',
  },
  [RESOURCES.CERTIFICATE]: {
    title: 'Certification authority',
    account: 'Account',
    secret: 'Secret',
    abbreviationName: 'User name',
    name: 'User name',
    provider: 'Provider',
    config: 'Other configuration',
    ID: 'id',
  },
  [RESOURCES.MODALITY_ROOM]: {
    title: 'Modality Rooms',
    name: 'Room name',
    code: 'Room code',
    description: 'Description',
    enabled: 'Enabled',
    disabled: 'Disabled',
    parent: 'Parent room',
    list: 'Modality room list',
  },
  [RESOURCES.MODALITY]: {
    title: 'Modalities',
    name: {
      long: 'Modality Name',
      short: 'Name',
    },
    code: {
      long: 'Modality Code',
      short: 'Code',
    },
    type: 'Type',
    modalityType: {
      long: 'Modality Type',
      short: 'Modality Type',
    },
    otherModalityTypes: 'Other modality types',
    groupID: 'Group ID',
    roomID: 'Room ID',
    group: {
      long: 'Group',
      short: 'Group',
    },
    room: {
      long: 'Modality room',
      short: 'Room',
    },
    aeTitle: 'AE title',
    ipAddress: 'IP Address',
    institutionName: 'Institution Name',
    stationName: 'Station Name',
    capability: 'Capability',
    manufacturerModelName: 'Manufacturer model name',
    procedures: 'Procedures',
    supportDicom: 'Dicom supported',
    requireDicom: 'Dicom required',
    hasOperators: 'Has operators',
    hasTranscribers: 'Has transcribers',
    enabled: 'Enabled',
    disabled: 'Disabled',
    addProcedure: 'Add Procedure',
    addModalityType: 'Add Other Modality Type',
    attributes: 'Attribute',
    attributesValue: 'Value',
    config: 'Config',
  },
  [RESOURCES.MODALITY_TYPE]: {
    title: 'Loại máy chụp',
    adminTitle: 'Modality type',
    name: 'Type name',
    otherNames: 'Other names',
    preferredModality: 'Preferred modality',
    preferredProcedure: 'Preferred procedure',
    scheduleOrder: 'Schedule order',
    haveOperators: 'Have Operators',
    haveTranscribers: 'Have Transcribers',
    requireDicom: 'Require Dicom',
    config: 'config',
    voided: 'voided',
    yes: 'Yes',
    no: 'No',
    requireConsumable: 'Require consumable',
  },
  [RESOURCES.MODALITY_GROUP]: {
    title: 'Modality Group',
    description: 'Description',
    index: 'Index',
    code: 'Group code',
    name: 'Group name',
  },
  [RESOURCES.PROCEDURE]: {
    title: 'Procedure',
    description: 'Description',
    name: 'Procedure name',
    code: 'Code',
    dicomDescription: 'Dicom description',
    modalityType: 'Modality type',
    supportAI: 'Support AI',
    bodyParts: 'Body part',
  },
  [RESOURCES.PROCEDURE_GROUP]: {
    title: 'Procedure group',
    description: 'Description',
    name: 'Name',
    procedures: '',
  },
  [RESOURCES.CONTENT_GROUP]: {
    title: 'Content group',
    description: 'Description',
    name: 'Name',
    modalityType: 'Modality type',
  },
  [RESOURCES.CONTENT]: {
    title: 'Content',
    description: 'Description',
    name: {
      short: 'Name',
      long: 'Content name',
    },
    user: 'Creator',
    modalityType: 'Modality type',
    groupIDs: 'Group',
    procedureIDs: 'Procedure',
    findings: 'Body content',
    impression: 'Conclusion',
  },
  [RESOURCES.LAYOUT]: {
    title: {
      long: 'Layout template',
      short: 'Layout',
    },
    description: 'Description',
    name: {
      short: 'Name',
      long: 'Layout name',
    },
    format: 'Format',
    modalityType: 'modalityType',
    procedureID: 'Procedure',
    data: 'Data',
    preview: 'Layout preview',
    buttonPdf: 'View PDF',
    department: 'Department',
    numOfImages: 'Number of images',
  },
  [RESOURCES.USER_GROUP]: {
    title: 'User group',
    description: 'Description',
    name: {
      short: 'Group name',
      long: 'Group name',
    },
    module: {
      short: 'Function',
      long: 'Main function',
    },
    role: 'Role',
    modality: 'Modality',
    report: 'Report',
    listMember: 'List Member',
    memberId: 'Member ID',
    memberName: 'Name',
    memberPhone: 'Phone number',
    memberDegree: 'Degree',
    memberObject: 'Object',
    memberLevel: 'System level',
  },
  [RESOURCES.STUDY]: {
    title: 'Study',
    adminTitle: 'Study',
    studyDatetime: 'Study date time',
    mergeStudyInfo: 'Merge study info',
    numOfImages: 'Number of images',
    numOfSeries: 'Number of series',
    numStudyIUID: {
      long: 'Number studyIUID',
      short: 'StudyIUID',
    },
    creationType: 'Creation type',
    selectedImages: 'Selected Images',
    bodyPartExamined: {
      title: 'Body part',
    },
    accessionNumber: 'Accession number',
    station: 'Station',
    deleteStudyInfo: 'Delete study info',
    splitStudyOrder: 'Split study order',
    downloadStudy: 'Download DICOM',
  },
  [RESOURCES.REPORT]: {
    reportDatetime: {
      short: 'Reported time',
      long: 'Reported time',
    },
    reportApprovedDate: {
      short: 'Approved date',
      long: 'Approved date',
    },
    reportApprovedTime: 'Approve time',
    approvedDate: 'Approved date',
    findings: 'Findings',
    impression: 'Impression',
    comments: 'Comments',
    description: 'Description',
    selectApproveTime: 'Select approve time',
    selectTemplate: {
      title: 'Select template',
      service: 'Procedure',
      modalityType: 'Modality type',
      selectByService: 'Select by procedure',
      selectByPersonal: 'Select by personal template',
      templateGroup: {
        short: 'Group template',
        long: 'Group template',
      },
      templateName: {
        short: 'Template name',
        long: 'Template name',
      },
      btnSelect: 'Select template',
    },
    attachment: {
      title: 'Attachment',
      fileName: 'File name',
      userCreated: 'Created by',
      fileSize: 'Size',
      upload: 'Upload',
      download: 'Download',
      fileCannotPreview: 'File cannot preview',
    },
    dicomImage: {
      title: 'Print dicom image',
      numberOfImageSelected: 'Number of image selected',
      printImage: 'Print DICOM image',
      layoutPrintImage: 'Layout print image',
    },
    print: {
      updatePdf: {
        lineHeight: 'Line height',
        fontSize: 'Font size',
      },
    },
  },
  [QMS_RESOURCES.QMS_TICKET]: {
    ticketNumber: 'Ticket number',
    patientName: 'Patient name',
    birthYear: 'Birth year',
    procedureCode: 'Procedure code',
    pid: 'Patient ID',
  },
  [RESOURCES.ANALYTIC]: {
    serviceAverage: 'Average service by day',
    serviceAverageColumn: 'Number of request',
    fromAndToDate: 'From date {fromDate} to date {toDate}',
    total: 'Total',
    approved: 'Approved',
    notStarted: 'Not started',
    notReady: 'Not ready',
    dateStatistic: 'Date: {date}',
    statisticModality: 'Procedure/Modality',
    modalityName: 'Modality name',
    modalityType: 'Modality type',
    totalRequest: 'Total',
    statisticApprover: 'Procedure/Radiologist',
    approverNameTitle: 'Fullname',
    approverName: 'Radiologist {name}',
    insurance: 'Insurance',
  },
  [RESOURCES.ORDER_STATUS]: {
    title: 'Report status count',
  },
  [RESOURCES.SHIFT_WORK]: {
    title: 'Shift work',
    startTime: 'Start Time',
    endTime: 'End Time',
    consecutive: 'Consecutive',
    index: 'Index',
    status: 'Status',
    activity: 'Activity',
  },
  [RESOURCES.STATISTICS_REPORT]: {
    title: 'Statistics report',
  },
  [RESOURCES.STORE]: {
    title: 'Store',
    transferAddress: 'Transfer address',
    transferDicom: 'Transfer dicom',
  },
  [RESOURCES.REMOTE_STORE]: {
    title: 'Remote store',
  },
  [RESOURCES.FILE_STORE]: {
    title: 'File store',
  },
  [RESOURCES.USER_ACTIVITY]: {
    title: 'User activity',
    type: 'Type',
    activityTime: 'Activity time',
    fullname: 'Fullname',
    username: 'Username',
    remoteAddress: 'Remote address',
    description: 'Description',
  },
  [RESOURCES.EVENT_LOG]: {
    title: 'Event log',
    id: 'ID',
    type: 'Type',
    logInfomation: 'Log infomation',
    source: 'Source',
    createdTime: 'Created time',
    lastAttempt: 'Last attempt',
    attempts: 'Attempts',
    resend: 'Resend',
    availableAt: 'Available at',
    succeeded: 'Succeeded',
    key: 'Key',
    errors: 'Errors',
    payload: 'Payload',
  },
  [RESOURCES.CONFIG]: {
    title: 'Config',
    attribute: 'Attribute',
    attributeID: 'Attribute ID',
    attributeName: 'Attribute name',
    attributeDatatype: 'Attribute datatype',
    attributeValue: 'Attribute value',
    preferred: 'Preferred',
  },
  [RESOURCES.DISPLAY_CONFIG]: {
    title: 'Display config',
  },
  [RESOURCES.APPLICATION]: {
    title: {
      short: 'Application',
      long: 'Application',
    },
    type: 'Type',
    name: 'Name',
    url: 'Url',
    secret: 'Secret',
    config: 'Config',
    preferred: 'Preferred',
  },
  [RESOURCES.WORKSTATION]: {
    title: 'Workstation',
  },
  [RESOURCES.ROLE]: {
    title: 'Role',
    id: 'ID',
    name: 'Role name',
    description: 'Description',
  },
  [RESOURCES.USER_TYPE]: {
    title: 'User type',
    name: 'Name',
    id: 'ID',
    description: 'Description',
  },
  [RESOURCES.MODALITY_TYPE_NAME]: {
    title: 'Modality type name',
    id: 'ID',
    name: 'Modality type name',
    description: 'Description',
  },
  [RESOURCES.TIMETABLE]: {
    shift: {
      morning: 'Morning',
      afternoon: 'Afternoon',
      night: 'Night',
      day: 'Day',
    },
    previousWeek: 'Previous week',
    nextWeek: 'Next week',
    weekFrom: 'Week from',
    weekTo: 'To',
    date: 'Date',
    nextDay: 'Next day',
    weekday:
      '{weekday|{1: Monday, 2: Tuesday, 3: Wednesday, 4: Thusday, 5: Friday, 6: Saturday, 0: Sunday}}',
  },
  [RESOURCES.CONSUMABLE]: {
    title: 'Consumable',
    materialCode: 'Material code',
    materialName: 'Material name',
    materialType: 'Material type',
    quantity: 'Quantity',
  },
  [RESOURCES.SETTING]: {
    tableSetting: 'Table setting',
    generalSetting: 'General setting',
    shortcutKey: 'Shortcut key',
    generalItemDescription:
      '{key|{autoLockOrder: Khi mở ca hệ thống sẽ tự động nhận ca chụp để viết kết quả, autoOpenViewer: Khi mở ca hệ thống sẽ tự động hiển thị màn hình viewer xem hình chụp, showDiagnosisPanel: Hiển thị màn hình viết kết quả trên cùng màn hình danh sách ca chụp, autoSelectTemplate: Khi nhận ca viết kết quả hệ thống tự động chọn mẫu kết quả ưu tiên, preferPersonalTemplate: Khi nhận ca viết kết quả hệ thống tự ưu tiên tìm mẫu kết quả cá nhân, doubleClickToOpenViewer: Khi double-click vào ca chụp hệ thống sẽ bật tab mở ca. Mặc định bật viewer }}',
    generalItemTitle:
      '{key|{autoLockOrder: Tự động nhận ca, autoOpenViewer: Tự động xem ảnh, showDiagnosisPanel: Viết kết quả nhanh, autoSelectTemplate: Tự động chọn mẫu kết quả, preferPersonalTemplate: Ưu tiên chọn mẫu cá nhân, doubleClickToOpenViewer: Mở ca khi double click vào chỉ định }}',
    shortcutKeyDescription:
      '{key|{open_viewer : Mở ứng dụng xem ảnh DICOM Viewer,lock_order: Khóa ca / nhận ca chụp}}',
    orderFieldName:
      '{key|{stt: STT, reportStatus: TT Đọc, patientName: Tên bệnh nhân, patientPID: Mã bệnh nhân, modalityType: Loại, inpatient: Nội trú, numOfConsumables: Vật tư, studyTime: Ngày chụp, requests: Yêu cầu chụp, bodyPart: Bộ phận, requestedTime: Ngày chỉ định, operationTime: Ngày thực hiện, approvedTime: Ngày kết quả, accessionNumber: Mã chỉ định, patientGender: Giới tính, approver: Bác sĩ duyệt, expectedReporter: BS đọc, requestedDepartment: Nơi CĐ}}',
  },
};
export default resources;
